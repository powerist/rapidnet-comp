ECA Rule r00Eca1Ins ACTION_ADD<prov(@REQUESTLOC, VID, RID, $1)> :- EVENT_INSERT<url(@REQUESTLOC, URL, HOST, REQUESTID)>, $1 := REQUESTLOC, VID := f_sha1((((initURL+ REQUESTLOC)+ URL)+ HOST)+ REQUESTID), RID := VID.
ECA Rule r00Eca1Del ACTION_DELETE<prov(@REQUESTLOC, VID, RID, $1)> :- EVENT_DELETE<url(@REQUESTLOC, URL, HOST, REQUESTID)>, $1 := REQUESTLOC, VID := f_sha1((((initURL+ REQUESTLOC)+ URL)+ HOST)+ REQUESTID), RID := VID.
ECA Rule prov_r1_1Eca0Ins ACTION_REMOTE_SEND<eRequestTemp(@RLOC, ADDR, URL, HOST, REQUESTID, RID, R, List)> :- EVENT_INSERT<url(@X, URL, HOST, REQUESTID)>, name_server(@X, DOMAIN, SERVER), address_record(@X, SERVER, ADDR), f_indexof(URL, DOMAIN) != -1, URL != DOMAIN, PID1 := f_sha1((((url+ X)+ URL)+ HOST)+ REQUESTID), List := f_append(PID1), RLOC := X, R := rs1, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r1_1Eca1Ins ACTION_REMOTE_SEND<eRequestTemp(@RLOC, ADDR, URL, HOST, REQUESTID, RID, R, List)> :- EVENT_INSERT<name_server(@X, DOMAIN, SERVER)>, url(@X, URL, HOST, REQUESTID), address_record(@X, SERVER, ADDR), f_indexof(URL, DOMAIN) != -1, URL != DOMAIN, PID1 := f_sha1((((url+ X)+ URL)+ HOST)+ REQUESTID), List := f_append(PID1), RLOC := X, R := rs1, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r1_1Eca2Ins ACTION_REMOTE_SEND<eRequestTemp(@RLOC, ADDR, URL, HOST, REQUESTID, RID, R, List)> :- EVENT_INSERT<address_record(@X, SERVER, ADDR)>, url(@X, URL, HOST, REQUESTID), name_server(@X, DOMAIN, SERVER), f_indexof(URL, DOMAIN) != -1, URL != DOMAIN, PID1 := f_sha1((((url+ X)+ URL)+ HOST)+ REQUESTID), List := f_append(PID1), RLOC := X, R := rs1, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r1_2_eca ACTION_ADD<ruleExec(@RLOC, RID, R, List)> :- EVENT_RECV<eRequestTemp(@RLOC, X, URL, HOST, REQUESTID, RID, R, List)>.
ECA Rule prov_r1_3_eca ACTION_REMOTE_SEND<eRequest(@X, URL, HOST, REQUESTID, RID, RLOC)> :- EVENT_RECV<eRequestTemp(@RLOC, X, URL, HOST, REQUESTID, RID, R, List)>.
ECA Rule prov_r1_4_eca ACTION_LOCAL_SEND<request(@X, URL, HOST, REQUESTID)> :- EVENT_RECV<eRequest(@X, URL, HOST, REQUESTID, RID, RLOC)>.
ECA Rule prov_r1_5_eca ACTION_ADD<prov(@X, VID, RID, RLOC)> :- EVENT_RECV<eRequest(@X, URL, HOST, REQUESTID, RID, RLOC)>, VID := f_sha1((((request+ X)+ URL)+ HOST)+ REQUESTID).
ECA Rule prov_r2_1_eca ACTION_REMOTE_SEND<eRequestTemp(@RLOC, ADDR, URL, HOST, REQUESTID, RID, R, List)> :- EVENT_RECV<request(@X, URL, HOST, REQUESTID)>, name_server(@X, DOMAIN, SERVER), address_record(@X, SERVER, ADDR), f_indexof(URL, DOMAIN) != -1, URL != DOMAIN, PID1 := f_sha1((((request+ X)+ URL)+ HOST)+ REQUESTID), List := f_append(PID1), PID2 := f_sha1(((name_server+ X)+ DOMAIN)+ SERVER), List2 := f_append(PID2), List := f_concat(List, List2), PID3 := f_sha1(((address_record+ X)+ SERVER)+ ADDR), List3 := f_append(PID3), List := f_concat(List, List3), RLOC := X, R := r2, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r3_1_eca ACTION_REMOTE_SEND<eResultTemp(@RLOC, ADDR, URL, HOST, REQUESTID, RID, R, List)> :- EVENT_RECV<request(@X, URL, HOST, REQUESTID)>, name_server(@X, DOMAIN, SERVER), address_record(@X, SERVER, ADDR), f_indexof(URL, DOMAIN) != -1, URL == DOMAIN, PID1 := f_sha1((((request+ X)+ URL)+ HOST)+ REQUESTID), List := f_append(PID1), PID2 := f_sha1(((name_server+ X)+ DOMAIN)+ SERVER), List2 := f_append(PID2), List := f_concat(List, List2), PID3 := f_sha1(((address_record+ X)+ SERVER)+ ADDR), List3 := f_append(PID3), List := f_concat(List, List3), RLOC := X, R := r3, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r3_2_eca ACTION_ADD<ruleExec(@RLOC, RID, R, List)> :- EVENT_RECV<eResultTemp(@RLOC, ADDR, URL, HOST, REQUESTID, RID, R, List)>.
ECA Rule prov_r3_3_eca ACTION_REMOTE_SEND<eResult(@ADDR, URL, HOST, REQUESTID, RID, RLOC)> :- EVENT_RECV<eResultTemp(@RLOC, ADDR, URL, HOST, REQUESTID, RID, R, List)>.
ECA Rule prov_r3_4_eca ACTION_ADD<result(@ADDR, URL, HOST, REQUESTID)> :- EVENT_RECV<eResult(@ADDR, URL, HOST, REQUESTID, RID, RLOC)>.
ECA Rule prov_r3_5_eca ACTION_ADD<prov(@ADDR, VID, RID, RLOC)> :- EVENT_RECV<eResult(@ADDR, URL, HOST, REQUESTID, RID, RLOC)>, VID := f_sha1((((result+ ADDR)+ URL)+ HOST)+ REQUESTID).
