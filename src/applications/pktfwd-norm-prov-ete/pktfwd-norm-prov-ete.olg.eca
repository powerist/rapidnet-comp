ECA Rule r00Eca1Ins ACTION_LOCAL_SEND<prov(@Node, VID, RID, $1)> :- EVENT_INSERT<initPacket(@Node, SrcAdd, DstAdd, Data)>, $1 := Node, VID := f_sha1((((initPacket+ Node)+ SrcAdd)+ DstAdd)+ Data), RID := VID.
ECA Rule r03Eca1Ins ACTION_LOCAL_SEND<prov(@Node, VID, RID, $1)> :- EVENT_INSERT<flowEntry(@Node, DstEntry, Next)>, $1 := Node, VID := f_sha1((Node+ DstEntry)+ Next), RID := VID.
ECA Rule prov_rs1_1_eca ACTION_REMOTE_SEND<epacketTemp(@RLOC, Next, SrcAdd, DstAdd, Data, RID, R, List)> :- EVENT_RECV<packet(@Node, SrcAdd, DstAdd, Data)>, flowEntry(@Node, DstAdd, Next), link(@Node, Next), PID2 := f_sha1((((packet+ Node)+ SrcAdd)+ DstAdd)+ Data), List := f_append(PID2), PID3 := f_sha1(((flowEntry+ Node)+ DstAdd)+ Next), List3 := f_append(PID3), List := f_concat(List, List3), PID4 := f_sha1((link+ Node)+ Next), List4 := f_append(PID4), List := f_concat(List, List4), RLOC := Node, R := rs1, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_rs1_2_eca ACTION_ADD<ruleExec(@RLOC, RID, R, List)> :- EVENT_RECV<epacketTemp(@RLOC, Next, SrcAdd, DstAdd, Data, RID, R, List)>.
ECA Rule prov_rs1_3_eca ACTION_REMOTE_SEND<epacket(@Next, SrcAdd, DstAdd, Data, RID, RLOC)> :- EVENT_RECV<epacketTemp(@RLOC, Next, SrcAdd, DstAdd, Data, RID, R, List)>.
ECA Rule prov_rs1_4_eca ACTION_LOCAL_SEND<packet(@Next, SrcAdd, DstAdd, Data)> :- EVENT_RECV<epacket(@Next, SrcAdd, DstAdd, Data, RID, RLOC)>.
ECA Rule prov_rs1_5_eca ACTION_LOCAL_SEND<prov(@Next, VID, RID, RLOC)> :- EVENT_RECV<epacket(@Next, SrcAdd, DstAdd, Data, RID, RLOC)>, VID := f_sha1((((packet+ Next)+ SrcAdd)+ DstAdd)+ Data).
ECA Rule prov_rh1_1Eca0Ins ACTION_REMOTE_SEND<epacketTemp(@RLOC, Next, SrcAdd, DstAdd, Data, RID, R, List)> :- EVENT_INSERT<initPacket(@Node, SrcAdd, DstAdd, Data)>, flowEntry(@Node, DstAdd, Next), link(@Node, Next), PID2 := f_sha1((((initPacket+ Node)+ SrcAdd)+ DstAdd)+ Data), List := f_append(PID2), PID3 := f_sha1((link+ Node)+ Next), List3 := f_append(PID3), List := f_concat(List, List3), RLOC := Node, R := rh1, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_rh1_1Eca1Ins ACTION_REMOTE_SEND<epacketTemp(@RLOC, Next, SrcAdd, DstAdd, Data, RID, R, List)> :- EVENT_INSERT<flowEntry(@Node, DstAdd, Next)>, initPacket(@Node, SrcAdd, DstAdd, Data), link(@Node, Next), PID2 := f_sha1((((initPacket+ Node)+ SrcAdd)+ DstAdd)+ Data), List := f_append(PID2), PID3 := f_sha1((link+ Node)+ Next), List3 := f_append(PID3), List := f_concat(List, List3), RLOC := Node, R := rh1, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_rh1_1Eca2Ins ACTION_REMOTE_SEND<epacketTemp(@RLOC, Next, SrcAdd, DstAdd, Data, RID, R, List)> :- EVENT_INSERT<link(@Node, Next)>, initPacket(@Node, SrcAdd, DstAdd, Data), flowEntry(@Node, DstAdd, Next), PID2 := f_sha1((((initPacket+ Node)+ SrcAdd)+ DstAdd)+ Data), List := f_append(PID2), PID3 := f_sha1((link+ Node)+ Next), List3 := f_append(PID3), List := f_concat(List, List3), RLOC := Node, R := rh1, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_rh2_1_eca ACTION_REMOTE_SEND<erecvPacketTemp(@RLOC, Node, SrcAdd, DstAdd, Data, RID, R, List)> :- EVENT_RECV<packet(@Node, SrcAdd, DstAdd, Data)>, DstAdd == Node, PID2 := f_sha1((((packet+ Node)+ SrcAdd)+ DstAdd)+ Data), List := f_append(PID2), RLOC := Node, R := rh2, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_rh2_2_eca ACTION_ADD<ruleExec(@RLOC, RID, R, List)> :- EVENT_RECV<erecvPacketTemp(@RLOC, Node, SrcAdd, DstAdd, Data, RID, R, List)>.
ECA Rule prov_rh2_3_eca ACTION_REMOTE_SEND<erecvPacket(@Node, SrcAdd, DstAdd, Data, RID, RLOC)> :- EVENT_RECV<erecvPacketTemp(@RLOC, Node, SrcAdd, DstAdd, Data, RID, R, List)>.
ECA Rule prov_rh2_4_eca ACTION_ADD<recvPacket(@Node, SrcAdd, DstAdd, Data)> :- EVENT_RECV<erecvPacket(@Node, SrcAdd, DstAdd, Data, RID, RLOC)>.
ECA Rule prov_rh2_5_eca ACTION_LOCAL_SEND<prov(@Node, VID, RID, RLOC)> :- EVENT_RECV<erecvPacket(@Node, SrcAdd, DstAdd, Data, RID, RLOC)>, VID := f_sha1((((recvPacket+ Node)+ SrcAdd)+ DstAdd)+ Data).
