/* A RapidNet application. Generated by RapidNet compiler. */

#ifndef PKTFWDNORMPROVCOMPONLINEETE_H
#define PKTFWDNORMPROVCOMPONLINEETE_H

#include <string>
#include <iostream>
#include "ns3/ptr.h"
#include "ns3/event-id.h"
#include "ns3/ipv4-address.h"
#include "ns3/rapidnet-header.h"
#include "ns3/relation-base.h"
#include "ns3/database.h"
#include "ns3/rapidnet-application-base.h"
#include "ns3/aggregator.h"
#include "ns3/aggwrap.h"

using namespace std;
using namespace ns3;

namespace ns3 {

class Socket;
class Packet;

namespace rapidnet {
namespace pktfwdnormprovcomponlineete {

class PktfwdNormProvCompOnlineEte : public RapidNetApplicationBase
{
public:
  static const string DEVICE;
  static const string EPACKETCOUNT;
  static const string EPACKETTEMP;
  static const string EQUIHASHTABLE;
  static const string ERECVPACKET;
  static const string ERECVPACKETTEMP;
  static const string FLOWENTRY;
  static const string INITPACKET;
  static const string INITPACKETCOUNT;
  static const string INITPACKETHASH;
  static const string LINK;
  static const string LINKHR;
  static const string PACKET;
  static const string PACKETPROV;
  static const string PROVHASHTABLE;
  static const string RECVAUXPKT;
  static const string RECVPACKET;
  static const string RECVPACKETDECOMP;
  static const string RECVPACKETTEMP;
  static const string RULEEXEC;

  static TypeId GetTypeId (void);

  PktfwdNormProvCompOnlineEte ();

  virtual ~PktfwdNormProvCompOnlineEte ();

protected:

  virtual void DoDispose (void);

  virtual void StartApplication (void);

  virtual void StopApplication (void);

  virtual void InitDatabase (void);

  virtual void DemuxRecv (Ptr<Tuple> tuple);

  virtual void Prov_rs1_1_eca (Ptr<Tuple> packetProv);

  virtual void Prov_rs1_2_eca (Ptr<Tuple> epacketTemp);

  virtual void Prov_rs1_3_eca (Ptr<Tuple> epacketCount);

  virtual void Prov_rs1_4_eca (Ptr<Tuple> epacketTemp);

  virtual void Rs1_eca (Ptr<Tuple> packet);

  virtual void Rh100Eca0Ins (Ptr<Tuple> initPacket);

  virtual void Rh101_eca (Ptr<Tuple> initPacketHash);

  virtual void Rh102_eca (Ptr<Tuple> initPacketCount);

  virtual void Rh103_eca (Ptr<Tuple> initPacketCount);

  virtual void Prov_rh1_1_eca (Ptr<Tuple> initPacketCount);

  virtual void Prov_rh2_1_eca (Ptr<Tuple> packetProv);

  virtual void Prov_rh2_2_eca (Ptr<Tuple> erecvPacketTemp);

  virtual void Prov_rh2_4_eca (Ptr<Tuple> erecvPacketTemp);

  virtual void Prov_rh2_5_eca (Ptr<Tuple> erecvPacket);

  virtual void Prov_rh2_6_eca (Ptr<Tuple> recvPacketTemp);

  virtual void Prov_rh2_7_eca (Ptr<Tuple> recvPacketDecomp);

  virtual void Prov_rh2_8_eca (Ptr<Tuple> recvPacketDecomp);

  virtual void Rh2_eca (Ptr<Tuple> packet);

  virtual void Rh3Eca0Ins (Ptr<Tuple> recvPacket);

  virtual void Rh3Eca0Del (Ptr<Tuple> recvPacket);

};

} // namespace pktfwdnormprovcomponlineete
} // namespace rapidnet
} // namespace ns3

#endif // PKTFWDNORMPROVCOMPONLINEETE_H
